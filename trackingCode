# importing the module
import cv2
  
#This is where you enter the video you want the code to read
source = cv2.VideoCapture('paperBall.MOV')

#Object detection
object_detector = cv2.createBackgroundSubtractorMOG2(history=100, varThreshold=500)
# running the loop
while True:
  
    # extracting the frames from the video// makes the "video" run smoother?
    ret, img = source.read()
      
    # Code to convert your video to gray-scale
    # grayMovie = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
  
    # displaying the video
    # cv2.imshow("Live", gray)
    ret, frame = source.read()
    height, width, _ = frame.shape
    print(height,width)
    roi = frame[0:1200, 1:700]

    # masking
    mask = object_detector.apply(roi)
    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    detections = []

    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area > 100:
            #cv2.drawContours(roi, [cnt], -1, (0, 255, 0), 2)
            x, y, w, h = cv2.boundingRect(cnt)
            cv2.rectangle(roi, (x, y),(x + w, y + h), (0, 255, 0), 3)
           
    detections.append({x, y, w, h})

    print(detections)
    # exiting the loop
    key = cv2.waitKey(1)
    if key == ord("q"):
        break

    cv2.imshow("roi", roi)
    #cv2.imshow("Frame", frame)
    cv2.imshow("Mask", mask)  
# closing the window
cv2.destroyAllWindows()
source.release()

